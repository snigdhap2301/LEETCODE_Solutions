/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        TreeNode current = root;

        while (current != null) {
            if (current.left == null) {
                result.add(current.val);
                current = current.right;
            } else {
                //rightmost node
                TreeNode prev = current.left;
                while (prev.right != null) {
                    prev = prev.right;
                }

                prev.right = current;

                // Storing the left subtree temporarily
                TreeNode leftSubtree = current.left;
                current.left = null;
                current = leftSubtree;
            }
        }

        return result;
    }
}

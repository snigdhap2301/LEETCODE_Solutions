class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        int n = triangle.size();

        // Store the minimum path sums
        int[][] temp = new int[n][n];

        for (int i = 0; i < n; i++) {
            temp[n - 1][i] = triangle.get(n - 1).get(i);
        }

        for (int row = n - 2; row >= 0; row--) {
            for (int col = 0; col <= row; col++) {
                int p = triangle.get(row).get(col);
                temp[row][col] = p + Math.min(temp[row + 1][col], temp[row + 1][col + 1]);
            }
        }

        return temp[0][0]; // Sum at the top of dp
    }
}

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def pathSum(self, root, targetSum):
        """
        :type root: Optional[TreeNode]
        :type targetSum: int
        :rtype: int
        """
        if not root:
            return 0
        s=[(root,[root.val])]
        n=0
        while s:
            node,total=s.pop()
            n+=total.count(targetSum)
            if node.left:
                s.append((node.left,[x+node.left.val for x in total] +[node.left.val]))
            if node.right:
                s.append((node.right,[x+node.right.val for x in total] +[node.right.val]))
        return n

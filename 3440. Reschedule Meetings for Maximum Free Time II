class Solution(object):
    def maxFreeTime(self, eventTime, startTime, endTime):
        """
        :type eventTime: int
        :type startTime: List[int]
        :type endTime: List[int]
        :rtype: int
        """
        gap_time = [startTime[0]]
        for i in range(1, len(startTime)):
            gap_time.append(startTime[i] - endTime[i - 1])
        gap_time.append(eventTime - endTime[-1])

        largestRight = [0] * len(gap_time)
        for i in range(len(gap_time) - 2, -1, -1):
            largestRight[i] = max(largestRight[i + 1], gap_time[i + 1])

        result = 0
        largestLeft = 0
        for i in range(1, len(gap_time)):
            curGap = endTime[i - 1] - startTime[i - 1]
            if curGap <= max(largestLeft, largestRight[i]):
                result = max(result, gap_time[i - 1] + gap_time[i] + curGap)
            result = max(result, gap_time[i - 1] + gap_time[i])
            largestLeft = max(largestLeft, gap_time[i - 1])

        return result

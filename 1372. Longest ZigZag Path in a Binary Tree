# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def longestZigZag(self, root):
        """
        :type root: Optional[TreeNode]
        :rtype: int
        """
        self.max_len=0
        def dfs(node, fromLeft):
            if node == None: 
                return -1
            left_len = 1 + dfs(node.left, True)
            right_len = 1 + dfs(node.right, False)
            self.max_len= max(self.max_len, max(left_len, right_len))
            if fromLeft:
                return right_len
            else:
                return left_len
        dfs(root, True)
        return self.max_len
